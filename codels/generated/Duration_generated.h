// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_DURATION_FOXGLOVE_H_
#define FLATBUFFERS_GENERATED_DURATION_FOXGLOVE_H_

#include "flatbuffers/flatbuffers.h"

namespace foxglove {

struct Duration;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4) Duration FLATBUFFERS_FINAL_CLASS {
 private:
  int32_t sec_;
  int32_t nsec_;

 public:
  Duration() {
    memset(static_cast<void *>(this), 0, sizeof(Duration));
  }
  Duration(int32_t _sec, int32_t _nsec)
      : sec_(flatbuffers::EndianScalar(_sec)),
        nsec_(flatbuffers::EndianScalar(_nsec)) {
  }
  /// Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive.
  int32_t sec() const {
    return flatbuffers::EndianScalar(sec_);
  }
  /// if sec === 0 : -999,999,999 <= nsec <= +999,999,999 
  /// otherwise sign of sec must match sign of nsec or be 0 and abs(nsec) <= 999,999,999
  int32_t nsec() const {
    return flatbuffers::EndianScalar(nsec_);
  }
};
FLATBUFFERS_STRUCT_END(Duration, 8);

}  // namespace foxglove

#endif  // FLATBUFFERS_GENERATED_DURATION_FOXGLOVE_H_
