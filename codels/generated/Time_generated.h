// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_TIME_FOXGLOVE_H_
#define FLATBUFFERS_GENERATED_TIME_FOXGLOVE_H_

#include "flatbuffers/flatbuffers.h"

namespace foxglove {

struct Time;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4) Time FLATBUFFERS_FINAL_CLASS {
 private:
  uint32_t sec_;
  uint32_t nsec_;

 public:
  Time() {
    memset(static_cast<void *>(this), 0, sizeof(Time));
  }
  Time(uint32_t _sec, uint32_t _nsec)
      : sec_(flatbuffers::EndianScalar(_sec)),
        nsec_(flatbuffers::EndianScalar(_nsec)) {
  }
  /// Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z
  uint32_t sec() const {
    return flatbuffers::EndianScalar(sec_);
  }
  /// Nano-second fractions from 0 to 999,999,999 inclusive
  uint32_t nsec() const {
    return flatbuffers::EndianScalar(nsec_);
  }
};
FLATBUFFERS_STRUCT_END(Time, 8);

}  // namespace foxglove

#endif  // FLATBUFFERS_GENERATED_TIME_FOXGLOVE_H_
